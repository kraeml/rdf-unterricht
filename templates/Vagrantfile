# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile for {{year}} and lesson {{lesson.name}}

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "{{lesson.default_box}}"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = true

  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end
{% for pc in lesson.pcs -%}
{% if pc.vagrant_name is not defined -%}
  {% set vagrant_name =  'default' -%}
{% else -%}
  {% set vagrant_name = pc.vagrant_name -%}
{% endif -%}
{% if pc.virtualbox_name is not defined -%}
  {% set virtualbox_name =  lesson.name|replace("-","_") -%}
{% else -%}
  {% set virtualbox_name = pc.virtualbox_name -%}
{% endif %}
  config.vm.define "{{vagrant_name}}" do |{{vagrant_name}}|
  {% if pc.forwarded_ports is not defined %}
  # No forwarded ports
{% else -%}
    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
{% for port in pc.forwarded_ports %}
    {{port.comment}}
    {{vagrant_name}}.vm.network "forwarded_port", guest: {{port.guest}}, host: {{port.host}}
{% endfor %}
{% endif %}

{% if pc.private_ip is not defined %}
  # No private Network
{% else %}
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    {{vagrant_name}}.vm.network "private_network", ip: "{{pc.private_ip}}"
{% endif %}

{% if pc.public_network is not defined or pc.public_network == False %}
    # No public network
{% else %}
    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    {{vagrant_name}}.vm.network "public_network"
{% endif %}
{% if pc.synced_folders is not defined %}
    # No synced folders
{% else %}
    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    {{vagrant_name}}.vm.synced_folder "{{pc.synced_folders[0].host}}", "{{pc.synced_folders[0].guest}}"
{% endif %}

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    {{vagrant_name}}.vm.provider "virtualbox" do |vb|
{% if pc.gui is not defined or pc.gui %}
{% else %}
      # Display the VirtualBox GUI when booting the machine
      vb.gui = true
{% endif %}
{% if pc.memory is not defined %}
{% else %}
      # Customize the amount of memory on the VM:
      vb.memory = "{{pc.memory}}"
{% endif %}
{% if pc.cpus is not defined %}
{% else %}
      vb.customize ["modifyvm", :id, "--cpus", {{pc.cpus}}]
{% endif %}
      vb.name = "{{virtualbox_name}}"
{% if pc.cpu_cap is not defined %}
{% else %}
      vb.customize ["modifyvm", :id, "--cpuexecutioncap", "{{pc.cpu_cap}}"]
{% endif %}
      vb.linked_clone = true if Vagrant::VERSION =~ /^1.8/
    end
{% if pc.private_ip is not defined %}
{% else %}
    {{vagrant_name}}.vm.post_up_message = "The app url is: http://{{pc.private_ip}}"
{% endif %}
  end
{% endfor %}
end
